{"name": "Проверка отсутствия результатов обработки архивов из других источников", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'a4e15065-b831-4402-8225-c67028c6fb60' != 'a4e15065-b831-4402-8225-c67028c6fb60'", "trace": "@pytest.mark.panoramic\n    @allure.title('Проверка отсутствия результатов обработки архивов из других источников')\n    def test_check_for_results_from_another_sources():\n        timestamp_list = []\n        values = [0, 1, 2]\n        for _ in range(len(values)):\n            response = mf.get_events(c.IMAGE_TYPE, _)\n            timestamp_list.append(response.json()[c.RESULTS][0][c.TIMESTAMP])\n    \n        iteration_uuid_1 = mf.get_list_iterations(c.SOURCE_ID).json()[c.DATA][c.ITERATIONS][0][c.UUID]\n        time.sleep(5)\n    \n        mf.upload_archive()\n    \n        iteration_uuid_2 = mf.get_list_iterations(c.SOURCE_ID).json()[c.DATA][c.ITERATIONS][0][c.UUID]\n        time.sleep(5)\n    \n>       assert iteration_uuid_1 != iteration_uuid_2\nE       AssertionError: assert 'a4e15065-b831-4402-8225-c67028c6fb60' != 'a4e15065-b831-4402-8225-c67028c6fb60'\n\ntest.py:43: AssertionError"}, "attachments": [{"name": "stdout", "source": "58a2d81d-d3b2-45ed-a8a9-882b99ff01df-attachment.txt", "type": "text/plain"}], "start": 1683198728688, "stop": 1683198741022, "uuid": "45fad528-13b4-41a5-b6c0-c3f4e33a15d0", "historyId": "3c71c2f47e786ed7cbd1911616a117c2", "testCaseId": "3c6ed4b7093a1f99091651e8b56560bf", "fullName": "test#test_check_for_results_from_another_sources", "labels": [{"name": "tag", "value": "panoramic"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "MacBook-Air-Aleksandr.local"}, {"name": "thread", "value": "64778-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test"}]}